# -*- coding: utf-8 -*-
"""KmeansClustering.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aQqDscoMDI2BWu7q3ffhr4KpzruooFpV
"""

import pandas as pd
import numpy as np

#Euclidean distance
def euclidean_distance(a, b):
    return np.sqrt(np.sum((a - b) ** 2))

#Kmean clustering
def kmeans(data, k, max_iterations=100):

    centroids = np.random.choice(data, k, replace=False)

    for _ in range(max_iterations):

        clusters = [[] for _ in range(k)]


        for point in data:
            distances = [euclidean_distance(point, centroid) for centroid in centroids]
            nearest_centroid = np.argmin(distances)
            clusters[nearest_centroid].append(point)

        #caculate the new centroids
        new_centroids = np.array([np.mean(cluster) if cluster else centroids[i] for i, cluster in enumerate(clusters)])

        centroids = new_centroids

    return centroids, clusters


file_name = 'Student_Performance_Data.xlsx'
data_frame = pd.read_excel(file_name)


data = data_frame['Marks'].values[:100]


k = int(input("Enter the number of clusters (k): "))


centroids, clusters = kmeans(data, k)


print("Centroids:", centroids)
print("Clusters:", clusters)